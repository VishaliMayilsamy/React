{"ast":null,"code":"import { createStore } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport authReducer from './auth';\nimport counterReducer from './counter';\n/*\nconst initialCounterState = { counter: 0 , showCounter: true };\n\nconst counterSlice = createSlice({\n    name: 'counter',\n    initialState: initialCounterState,\n    reducers: {\n        increment(state) {\n            state.counter++;\n        },\n        decrement(state) {\n            state.counter--;\n        },\n        increase(state, action) {\n            state.counter = state.counter + action.payload;\n        },\n        toggleCounter(state) {\n            state.showCounter = !state.showCounter;\n        }\n    }\n})\n\nconst initialAuthState = {\n    isAuthenticated: false\n}\n\nconst authSlice = createSlice({\n    name: 'authentication',\n    initialState: initialAuthState,\n    reducers: {\n        login(state){\n            state.isAuthenticated = true;\n        },\n        logout(state){\n            state.isAuthenticated = false;\n        }\n    }\n})\n*/\n\nconst store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    auth: authReducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;\n/*\nconst counterReducer = (state = initialState, action) => {\n if(action.type === 'increment'){\n     return{\n        counter: state.counter + 1,\n        showCounter: state.showCounter,\n     };\n }\n if(action.type === 'increase'){\n    return{\n       counter: state.counter + action.amount,\n       showCounter: state.showCounter,\n    };\n}\n if(action.type === 'decrement'){\n    return{\n        counter: state.counter - 1,\n        showCounter: state.showCounter,\n     }; \n}\n if(action.type === 'toggle'){\n     return{\n         showCounter: !state.showCounter,\n         counter: state.counter,\n     }\n }\n    return state;\n}\n*/\n//const store = createStore(counterSlice.reducer);","map":{"version":3,"sources":["/Users/vishalimayilsamy/Desktop/Redux/src/store/index.js"],"names":["createStore","configureStore","authReducer","counterReducer","store","reducer","counter","auth","counterActions","counterSlice","actions","authActions","authSlice"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,WAAP,MAAwB,QAAxB;AACA,OAAOC,cAAP,MAA2B,WAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,KAAK,GAAGH,cAAc,CAAC;AACzBI,EAAAA,OAAO,EAAE;AAAEC,IAAAA,OAAO,EAAEH,cAAX;AAA2BI,IAAAA,IAAI,EAAEL;AAAjC;AADgB,CAAD,CAA5B;AAIA,OAAO,MAAMM,cAAc,GAAGC,YAAY,CAACC,OAApC;AACP,OAAO,MAAMC,WAAW,GAAGC,SAAS,CAACF,OAA9B;AAEP,eAAeN,KAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import { createStore } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport authReducer from './auth';\nimport counterReducer from './counter';\n\n/*\nconst initialCounterState = { counter: 0 , showCounter: true };\n\nconst counterSlice = createSlice({\n    name: 'counter',\n    initialState: initialCounterState,\n    reducers: {\n        increment(state) {\n            state.counter++;\n        },\n        decrement(state) {\n            state.counter--;\n        },\n        increase(state, action) {\n            state.counter = state.counter + action.payload;\n        },\n        toggleCounter(state) {\n            state.showCounter = !state.showCounter;\n        }\n    }\n})\n\nconst initialAuthState = {\n    isAuthenticated: false\n}\n\nconst authSlice = createSlice({\n    name: 'authentication',\n    initialState: initialAuthState,\n    reducers: {\n        login(state){\n            state.isAuthenticated = true;\n        },\n        logout(state){\n            state.isAuthenticated = false;\n        }\n    }\n})\n*/\n\nconst store = configureStore({\n    reducer: { counter: counterReducer, auth: authReducer },\n});\n\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\n\nexport default store;\n\n/*\nconst counterReducer = (state = initialState, action) => {\n if(action.type === 'increment'){\n     return{\n        counter: state.counter + 1,\n        showCounter: state.showCounter,\n     };\n }\n if(action.type === 'increase'){\n    return{\n       counter: state.counter + action.amount,\n       showCounter: state.showCounter,\n    };\n}\n if(action.type === 'decrement'){\n    return{\n        counter: state.counter - 1,\n        showCounter: state.showCounter,\n     }; \n}\n if(action.type === 'toggle'){\n     return{\n         showCounter: !state.showCounter,\n         counter: state.counter,\n     }\n }\n    return state;\n}\n*/\n\n//const store = createStore(counterSlice.reducer);\n\n\n\n"]},"metadata":{},"sourceType":"module"}