{"ast":null,"code":"var _jsxFileName = \"/Users/vishalimayilsamy/Desktop/Form-Userinput/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport { useEffect } from 'react/cjs/react.production.min';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(true);\n  useEffect(() => {\n    if (enteredNameIsValid) {\n      console.log(\"Name input is valid!\");\n    }\n  }, [enteredNameIsValid]);\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (enteredName.trim() === '') {\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n    setEnteredNameIsValid(true);\n    console.log(enteredName);\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue); //nameInputRef.current.value = ''; ==> not possible bcoz it directly manipulated DOM\n\n    setEnteredName('');\n  };\n\n  const nameInputClasses = enteredNameIsValid ? 'form-control' : 'form-control invalid';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), !enteredNameIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"W92Sn5I7i9YwCjOUmeT0qDzOmSY=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/Users/vishalimayilsamy/Desktop/Form-Userinput/src/components/SimpleInput.js"],"names":["useRef","useState","useEffect","SimpleInput","props","nameInputRef","enteredName","setEnteredName","enteredNameIsValid","setEnteredNameIsValid","console","log","nameInputChangeHandler","event","target","value","formSubmissionHandler","preventDefault","trim","enteredValue","current","nameInputClasses"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,gCAA1B;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAE7B,QAAMC,YAAY,GAAGL,MAAM,EAA3B;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACO,kBAAD,EAAoBC,qBAApB,IAA6CR,QAAQ,CAAC,IAAD,CAA3D;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGM,kBAAH,EAAsB;AACpBE,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD;AACF,GAJQ,EAIN,CAACH,kBAAD,CAJM,CAAT;;AAMA,QAAMI,sBAAsB,GAAGC,KAAK,IAAG;AACrCN,IAAAA,cAAc,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD,GAFD;;AAIA,QAAMC,qBAAqB,GAAGH,KAAK,IAAG;AACpCA,IAAAA,KAAK,CAACI,cAAN;;AAEA,QAAGX,WAAW,CAACY,IAAZ,OAAuB,EAA1B,EAA6B;AAC3BT,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACA;AACD;;AAEDA,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ;AAEA,UAAMa,YAAY,GAAGd,YAAY,CAACe,OAAb,CAAqBL,KAA1C;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYQ,YAAZ,EAboC,CAerC;;AACCZ,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAjBD;;AAoBA,QAAMc,gBAAgB,GAAGb,kBAAkB,GAAG,cAAH,GAAoB,sBAA/D;AAEA,sBACE;AAAM,IAAA,QAAQ,EAAEQ,qBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEK,gBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACA,QAAA,GAAG,EAAEhB,YADL;AAEA,QAAA,IAAI,EAAC,MAFL;AAEY,QAAA,EAAE,EAAC,MAFf;AAGA,QAAA,QAAQ,EAAEO,sBAHV;AAIA,QAAA,KAAK,EAAEN;AAJP;AAAA;AAAA;AAAA;AAAA,cAFF,EAOG,CAACE,kBAAD,iBAAuB;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAP1B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAtDD;;GAAML,W;;KAAAA,W;AAwDN,eAAeA,WAAf","sourcesContent":["import { useRef, useState } from 'react';\nimport { useEffect } from 'react/cjs/react.production.min';\n\nconst SimpleInput = (props) => {\n\n  const nameInputRef = useRef()\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameIsValid,setEnteredNameIsValid] = useState(true);\n\n  useEffect(()=>{\n    if(enteredNameIsValid){\n      console.log(\"Name input is valid!\");\n    }\n  }, [enteredNameIsValid]);\n\n  const nameInputChangeHandler = event =>{\n    setEnteredName(event.target.value);\n  }\n\n  const formSubmissionHandler = event =>{\n    event.preventDefault();\n\n    if(enteredName.trim() === ''){\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n    setEnteredNameIsValid(true);\n\n    console.log(enteredName);\n\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue);\n\n   //nameInputRef.current.value = ''; ==> not possible bcoz it directly manipulated DOM\n    setEnteredName('')\n  }\n\n\n  const nameInputClasses = enteredNameIsValid ? 'form-control' : 'form-control invalid';\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input \n        ref={nameInputRef} \n        type='text' id='name' \n        onChange={nameInputChangeHandler} \n        value={enteredName} />\n       { !enteredNameIsValid && <p className=\"error-text\">Name must not be empty!</p> }\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}