{"ast":null,"code":"var _jsxFileName = \"/Users/vishalimayilsamy/Desktop/Form-Userinput/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    console.log(enteredName); //const enteredValue = nameInputRef.current.value;\n    //console.log(enteredValue);\n    //nameInputRef.current.value = ''; ==> not possible bcoz it directly manipulated DOM\n\n    setEnteredName('');\n    setEnteredNameTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        // ref={nameInputRef} \n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"K5TeyCZ7DEljvxb5FmMK3VEH0aM=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/Users/vishalimayilsamy/Desktop/Form-Userinput/src/components/SimpleInput.js"],"names":["useEffect","useRef","useState","SimpleInput","props","nameInputRef","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","enteredNameIsValid","trim","nameInputIsInvalid","nameInputChangeHandler","event","target","value","nameInputBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputClasses"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAE7B,QAAMC,YAAY,GAAGJ,MAAM,EAA3B;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACM,kBAAD,EAAoBC,qBAApB,IAA6CP,QAAQ,CAAC,KAAD,CAA3D;AAEA,QAAMQ,kBAAkB,GAAGJ,WAAW,CAACK,IAAZ,OAAuB,EAAlD;AACA,QAAMC,kBAAkB,GAAG,CAACF,kBAAD,IAAuBF,kBAAlD;;AAEA,QAAMK,sBAAsB,GAAGC,KAAK,IAAG;AACrCP,IAAAA,cAAc,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD,GAFD;;AAIA,QAAMC,oBAAoB,GAAGH,KAAK,IAAG;AACnCL,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD,GAFD;;AAKA,QAAMS,qBAAqB,GAAGJ,KAAK,IAAG;AACpCA,IAAAA,KAAK,CAACK,cAAN;AAEAV,IAAAA,qBAAqB,CAAC,IAAD,CAArB;;AAEA,QAAG,CAACC,kBAAJ,EAAuB;AACrB;AACD;;AAEDU,IAAAA,OAAO,CAACC,GAAR,CAAYf,WAAZ,EAToC,CAWpC;AACA;AAED;;AACCC,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD,GAjBD;;AAmBA,QAAMa,gBAAgB,GAAGV,kBAAkB,GAAG,sBAAH,GAA4B,cAAvE;AAEA,sBACE;AAAM,IAAA,QAAQ,EAAEM,qBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEI,gBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACD;AACC,QAAA,IAAI,EAAC,MAFL;AAEY,QAAA,EAAE,EAAC,MAFf;AAGA,QAAA,QAAQ,EAAET,sBAHV;AAIA,QAAA,MAAM,EAAII,oBAJV;AAKA,QAAA,KAAK,EAAEX;AALP;AAAA;AAAA;AAAA;AAAA,cAFF,EAQGM,kBAAkB,iBAAI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARzB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAxDD;;GAAMT,W;;KAAAA,W;AA0DN,eAAeA,WAAf","sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\nconst SimpleInput = (props) => {\n\n  const nameInputRef = useRef()\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameTouched,setEnteredNameTouched] = useState(false);\n\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n  const nameInputChangeHandler = event =>{\n    setEnteredName(event.target.value);\n  }\n\n  const nameInputBlurHandler = event =>{\n    setEnteredNameTouched(true);\n  }\n\n\n  const formSubmissionHandler = event =>{\n    event.preventDefault();\n\n    setEnteredNameTouched(true);\n\n    if(!enteredNameIsValid){\n      return;\n    }\n\n    console.log(enteredName);\n\n    //const enteredValue = nameInputRef.current.value;\n    //console.log(enteredValue);\n\n   //nameInputRef.current.value = ''; ==> not possible bcoz it directly manipulated DOM\n    setEnteredName('');\n    setEnteredNameTouched(false);\n  }\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input \n       // ref={nameInputRef} \n        type='text' id='name' \n        onChange={nameInputChangeHandler} \n        onBlur = {nameInputBlurHandler}\n        value={enteredName} />\n       { nameInputIsInvalid && <p className=\"error-text\">Name must not be empty!</p> }\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}